import React, { useState } from "react";
import { Calendar, momentLocalizer } from "react-big-calendar";
import moment from "moment";
import events from "./events";
import "react-big-calendar/lib/css/react-big-calendar.css";
import Popup from 'reactjs-popup';
import Input from './input';
import { v4 } from 'uuid';

moment.locale("en-GB");
const localizer = momentLocalizer(moment);

export default function ReactBigCalendar() {
  const [eventsData, setEventsData] = useState(events);

  

  const handleSelect = ({ start, end }) => {
    const id = v4();
    console.log(start);
    console.log(end);
    const title = window.prompt("New Event name");
    if (title) {
      setEventsData([
        ...eventsData,
        {
          start,
          end,
          title,
          id
        }
      ]);
      const handleEventAdd = async () => {
        const event = {_id: id, title: title, start: start, end: end}
        const response = await fetch('/api/calendar/createEvent', {
          method: 'POST',
          body: JSON.stringify(event),
          headers: {
            'Content-Type': 'application/json'
          }
        })
        const json = await response.json()
      }
      handleEventAdd();
    }
  };

  //Returns array of events
  const getEvents = async () => {
    const response = await fetch('/api/calendar/');
    const json = await response.json();
    return json
  }

  function renderEventContent(slotInfo) {
    const date = moment(slotInfo.start).format('MMMM D, YYYY');
    return (
        <div>
            <p>Date: <strong>{date}</strong></p>
            <p>Location: {slotInfo.location}</p>
        </div>
    );
  }

  const handleEventSelect = async (eventInfo) => {
    const id = eventInfo.id
    window.confirm(`Are you sure you wantt to delete the event '${eventInfo.title}'`)

    const response = await fetch('api/calendar/' + `${eventInfo.id}`, {
      method: 'DELETE'
    })
    const json = await response.json();

  }

  return (
    <div className="App">
      <Calendar
        views={["day", "agenda", "work_week", "month"]}
        selectable
        localizer={localizer}
        defaultDate={new Date()}
        defaultView="month"
        events={getEvents}
        style={{ height: "100vh" }}
        onSelectEvent={handleEventSelect}
        onSelectSlot={handleSelect}
      />
    </div>
  );
}
